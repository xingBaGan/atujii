name: Release
on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            output: '*.dmg'
          - os: ubuntu-latest
            output: '*.AppImage'
          - os: windows-latest
            output: '*.exe'

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Linux Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            clang \
            libdbus-1-dev \
            libgtk-3-dev \
            libnotify-dev \
            libasound2-dev \
            libcap-dev \
            libcups2-dev \
            libxtst-dev \
            libxss1 \
            libnss3-dev \
            gcc-multilib \
            g++-multilib \
            curl \
            gperf \
            bison \
            python3-dbusmock \
            openjdk-8-jre

      - name: Install Dependencies
        run: |
          npm ci
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          packageManager: pnpm

      - name: Build Electron App
        run: npm run electron:build
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload Artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: dist-electron/${{ matrix.output }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }} 